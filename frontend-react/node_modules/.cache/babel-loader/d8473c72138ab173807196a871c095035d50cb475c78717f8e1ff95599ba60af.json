{"ast":null,"code":"import axios from\"axios\";// URL base de la API del backend Django\nconst defaultBase=typeof window!=='undefined'?\"\".concat(window.location.protocol,\"//\").concat(window.location.hostname,\":8000\"):'http://127.0.0.1:8000';const API_BASE=process.env.REACT_APP_API_BASE||defaultBase;// Variable global para almacenar el token de acceso\nlet accessToken=null;let refreshToken=null;/**\r\n * Función para establecer el token de acceso JWT\r\n * Se llama después del login exitoso\r\n */export function setAccessToken(token){accessToken=token;try{localStorage.setItem('token',token);}catch(_unused){}}export function setRefreshToken(token){refreshToken=token;try{localStorage.setItem('refresh',token||'');}catch(_unused2){}}function getStoredAccessToken(){if(accessToken)return accessToken;try{return localStorage.getItem('token');}catch(_unused3){return null;}}function getStoredRefreshToken(){if(refreshToken)return refreshToken;try{return localStorage.getItem('refresh');}catch(_unused4){return null;}}function clearTokens(){accessToken=null;refreshToken=null;try{localStorage.removeItem('token');localStorage.removeItem('refresh');}catch(_unused5){}}// Crear instancia de axios con configuración base\nconst api=axios.create({baseURL:API_BASE});// Interceptor para agregar el token JWT a las peticiones (lee de memoria y localStorage)\napi.interceptors.request.use(config=>{const url=(config.url||'').toString();const isAuthEndpoint=url.includes('/auth/token')||url.includes('/auth/refresh')||url.includes('/auth/register');if(!isAuthEndpoint){const token=getStoredAccessToken();if(token){config.headers=config.headers||{};config.headers.Authorization=\"Bearer \".concat(token);}}return config;});// Interceptor para manejar respuestas y errores de autenticación\napi.interceptors.response.use(resp=>resp,async error=>{var _error$response;const originalRequest=error.config||{};const status=(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status;const url=(originalRequest.url||'').toString();const isAuthEndpoint=url.includes('/auth/token')||url.includes('/auth/refresh')||url.includes('/auth/register');if(status===401&&!originalRequest._retry&&!isAuthEndpoint){originalRequest._retry=true;const rToken=getStoredRefreshToken();if(rToken){try{const{data}=await axios.post(\"\".concat(API_BASE,\"/auth/refresh\"),{refresh:rToken});setAccessToken(data.access);if(data.refresh)setRefreshToken(data.refresh);originalRequest.headers=originalRequest.headers||{};originalRequest.headers.Authorization=\"Bearer \".concat(data.access);return api.request(originalRequest);}catch(e){clearTokens();}}else{clearTokens();}}return Promise.reject(error);});/**\r\n * Función para iniciar sesión\r\n * Envía credenciales al endpoint /auth/token y obtiene los tokens JWT\r\n */export async function login(username,password){const{data}=await api.post(\"/auth/token\",{username,password});// Guardar el token de acceso para futuras peticiones\nsetAccessToken(data.access);setRefreshToken(data.refresh||'');// TODO: Guardar el refresh token de forma segura (localStorage o cookie)\nreturn data;}/**\r\n * Función para registrar nuevos usuarios\r\n * Envía datos al endpoint /auth/register\r\n */export async function register(username,email,password){const{data}=await api.post(\"/auth/register\",{username,email,password});return data;}/**\r\n * Función para realizar consultas RAG al sistema\r\n * Envía la pregunta y recibe respuesta con fuentes\r\n */export async function query(question){let top_k=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;let conversation_id=arguments.length>2?arguments[2]:undefined;const{data}=await api.post(\"/query\",{question,top_k,conversation_id});return data;}/**\r\n * Función para ingerir documentos en el sistema\r\n * Permite subir archivos para ser procesados por el RAG\r\n */export async function ingest(payload){const{data}=await api.post(\"/ingest\",payload);return data;}// Sincroniza PDFs desde Google Drive\nexport async function syncDrive(){const{data}=await api.post(\"/sync-drive\",{});return data;}// Sube un PDF y lo ingiere\nexport async function uploadPdf(file){let opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const form=new FormData();form.append('file',file);if(opts.chunk_size)form.append('chunk_size',String(opts.chunk_size));if(opts.chunk_overlap)form.append('chunk_overlap',String(opts.chunk_overlap));const{data}=await api.post(\"/ingest/upload\",form,{headers:{'Content-Type':'multipart/form-data'}});return data;}/**\r\n * Función para verificar el estado del servidor\r\n * Endpoint de health check\r\n */export async function health(){const{data}=await api.get(\"/health\");return data;}// Listar conversaciones del usuario\nexport async function getConversations(){const{data}=await api.get('/conversations');return data;}// Listar mensajes de una conversación\nexport async function getMessages(convId){const{data}=await api.get(\"/conversations/\".concat(convId,\"/messages\"));return data;}","map":{"version":3,"names":["axios","defaultBase","window","concat","location","protocol","hostname","API_BASE","process","env","REACT_APP_API_BASE","accessToken","refreshToken","setAccessToken","token","localStorage","setItem","_unused","setRefreshToken","_unused2","getStoredAccessToken","getItem","_unused3","getStoredRefreshToken","_unused4","clearTokens","removeItem","_unused5","api","create","baseURL","interceptors","request","use","config","url","toString","isAuthEndpoint","includes","headers","Authorization","response","resp","error","_error$response","originalRequest","status","_retry","rToken","data","post","refresh","access","e","Promise","reject","login","username","password","register","email","query","question","top_k","arguments","length","undefined","conversation_id","ingest","payload","syncDrive","uploadPdf","file","opts","form","FormData","append","chunk_size","String","chunk_overlap","health","get","getConversations","getMessages","convId"],"sources":["C:/Users/amaya/Downloads/rag-asistente-main/rag-asistente-main/frontend-react/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// URL base de la API del backend Django\r\nconst defaultBase = (typeof window !== 'undefined')\r\n  ? `${window.location.protocol}//${window.location.hostname}:8000`\r\n  : 'http://127.0.0.1:8000';\r\nconst API_BASE = process.env.REACT_APP_API_BASE || defaultBase;\r\n\r\n// Variable global para almacenar el token de acceso\r\nlet accessToken = null;\r\nlet refreshToken = null;\r\n\r\n/**\r\n * Función para establecer el token de acceso JWT\r\n * Se llama después del login exitoso\r\n */\r\nexport function setAccessToken(token) {\r\n  accessToken = token;\r\n  try { localStorage.setItem('token', token); } catch {}\r\n}\r\n\r\nexport function setRefreshToken(token) {\r\n  refreshToken = token;\r\n  try { localStorage.setItem('refresh', token || ''); } catch {}\r\n}\r\n\r\nfunction getStoredAccessToken() {\r\n  if (accessToken) return accessToken;\r\n  try { return localStorage.getItem('token'); } catch { return null; }\r\n}\r\n\r\nfunction getStoredRefreshToken() {\r\n  if (refreshToken) return refreshToken;\r\n  try { return localStorage.getItem('refresh'); } catch { return null; }\r\n}\r\n\r\nfunction clearTokens() {\r\n  accessToken = null;\r\n  refreshToken = null;\r\n  try { localStorage.removeItem('token'); localStorage.removeItem('refresh'); } catch {}\r\n}\r\n\r\n// Crear instancia de axios con configuración base\r\nconst api = axios.create({ baseURL: API_BASE });\r\n\r\n// Interceptor para agregar el token JWT a las peticiones (lee de memoria y localStorage)\r\napi.interceptors.request.use((config) => {\r\n  const url = (config.url || '').toString();\r\n  const isAuthEndpoint = url.includes('/auth/token') || url.includes('/auth/refresh') || url.includes('/auth/register');\r\n  if (!isAuthEndpoint) {\r\n    const token = getStoredAccessToken();\r\n    if (token) {\r\n      config.headers = config.headers || {};\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n  }\r\n  return config;\r\n});\r\n\r\n// Interceptor para manejar respuestas y errores de autenticación\r\napi.interceptors.response.use(\r\n  (resp) => resp,\r\n  async (error) => {\r\n    const originalRequest = error.config || {};\r\n    const status = error.response?.status;\r\n    const url = (originalRequest.url || '').toString();\r\n    const isAuthEndpoint = url.includes('/auth/token') || url.includes('/auth/refresh') || url.includes('/auth/register');\r\n\r\n    if (status === 401 && !originalRequest._retry && !isAuthEndpoint) {\r\n      originalRequest._retry = true;\r\n      const rToken = getStoredRefreshToken();\r\n      if (rToken) {\r\n        try {\r\n          const { data } = await axios.post(`${API_BASE}/auth/refresh`, { refresh: rToken });\r\n          setAccessToken(data.access);\r\n          if (data.refresh) setRefreshToken(data.refresh);\r\n          originalRequest.headers = originalRequest.headers || {};\r\n          originalRequest.headers.Authorization = `Bearer ${data.access}`;\r\n          return api.request(originalRequest);\r\n        } catch (e) {\r\n          clearTokens();\r\n        }\r\n      } else {\r\n        clearTokens();\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/**\r\n * Función para iniciar sesión\r\n * Envía credenciales al endpoint /auth/token y obtiene los tokens JWT\r\n */\r\nexport async function login(username, password) {\r\n  const { data } = await api.post(\"/auth/token\", { username, password });\r\n  // Guardar el token de acceso para futuras peticiones\r\n  setAccessToken(data.access);\r\n  setRefreshToken(data.refresh || '');\r\n  // TODO: Guardar el refresh token de forma segura (localStorage o cookie)\r\n  return data;\r\n}\r\n\r\n/**\r\n * Función para registrar nuevos usuarios\r\n * Envía datos al endpoint /auth/register\r\n */\r\nexport async function register(username, email, password) {\r\n  const { data } = await api.post(\"/auth/register\", { username, email, password });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Función para realizar consultas RAG al sistema\r\n * Envía la pregunta y recibe respuesta con fuentes\r\n */\r\nexport async function query(question, top_k = 3, conversation_id) {\r\n  const { data } = await api.post(\"/query\", { question, top_k, conversation_id });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Función para ingerir documentos en el sistema\r\n * Permite subir archivos para ser procesados por el RAG\r\n */\r\nexport async function ingest(payload) {\r\n  const { data } = await api.post(\"/ingest\", payload);\r\n  return data;\r\n}\r\n\r\n// Sincroniza PDFs desde Google Drive\r\nexport async function syncDrive() {\r\n  const { data } = await api.post(\"/sync-drive\", {});\r\n  return data;\r\n}\r\n\r\n// Sube un PDF y lo ingiere\r\nexport async function uploadPdf(file, opts = {}) {\r\n  const form = new FormData();\r\n  form.append('file', file);\r\n  if (opts.chunk_size) form.append('chunk_size', String(opts.chunk_size));\r\n  if (opts.chunk_overlap) form.append('chunk_overlap', String(opts.chunk_overlap));\r\n  const { data } = await api.post(\"/ingest/upload\", form, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Función para verificar el estado del servidor\r\n * Endpoint de health check\r\n */\r\nexport async function health() {\r\n  const { data } = await api.get(\"/health\");\r\n  return data;\r\n}\r\n\r\n// Listar conversaciones del usuario\r\nexport async function getConversations() {\r\n  const { data } = await api.get('/conversations');\r\n  return data;\r\n}\r\n\r\n// Listar mensajes de una conversación\r\nexport async function getMessages(convId) {\r\n  const { data } = await api.get(`/conversations/${convId}/messages`);\r\n  return data;\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,WAAW,CAAI,MAAO,CAAAC,MAAM,GAAK,WAAW,IAAAC,MAAA,CAC3CD,MAAM,CAACE,QAAQ,CAACC,QAAQ,OAAAF,MAAA,CAAKD,MAAM,CAACE,QAAQ,CAACE,QAAQ,UACxD,uBAAuB,CAC3B,KAAM,CAAAC,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,EAAIT,WAAW,CAE9D;AACA,GAAI,CAAAU,WAAW,CAAG,IAAI,CACtB,GAAI,CAAAC,YAAY,CAAG,IAAI,CAEvB;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAC,cAAcA,CAACC,KAAK,CAAE,CACpCH,WAAW,CAAGG,KAAK,CACnB,GAAI,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEF,KAAK,CAAC,CAAE,CAAE,MAAAG,OAAA,CAAM,CAAC,CACvD,CAEA,MAAO,SAAS,CAAAC,eAAeA,CAACJ,KAAK,CAAE,CACrCF,YAAY,CAAGE,KAAK,CACpB,GAAI,CAAEC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAEF,KAAK,EAAI,EAAE,CAAC,CAAE,CAAE,MAAAK,QAAA,CAAM,CAAC,CAC/D,CAEA,QAAS,CAAAC,oBAAoBA,CAAA,CAAG,CAC9B,GAAIT,WAAW,CAAE,MAAO,CAAAA,WAAW,CACnC,GAAI,CAAE,MAAO,CAAAI,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC,CAAE,CAAE,MAAAC,QAAA,CAAM,CAAE,MAAO,KAAI,CAAE,CACrE,CAEA,QAAS,CAAAC,qBAAqBA,CAAA,CAAG,CAC/B,GAAIX,YAAY,CAAE,MAAO,CAAAA,YAAY,CACrC,GAAI,CAAE,MAAO,CAAAG,YAAY,CAACM,OAAO,CAAC,SAAS,CAAC,CAAE,CAAE,MAAAG,QAAA,CAAM,CAAE,MAAO,KAAI,CAAE,CACvE,CAEA,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrBd,WAAW,CAAG,IAAI,CAClBC,YAAY,CAAG,IAAI,CACnB,GAAI,CAAEG,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC,CAAEX,YAAY,CAACW,UAAU,CAAC,SAAS,CAAC,CAAE,CAAE,MAAAC,QAAA,CAAM,CAAC,CACvF,CAEA;AACA,KAAM,CAAAC,GAAG,CAAG5B,KAAK,CAAC6B,MAAM,CAAC,CAAEC,OAAO,CAAEvB,QAAS,CAAC,CAAC,CAE/C;AACAqB,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACvC,KAAM,CAAAC,GAAG,CAAG,CAACD,MAAM,CAACC,GAAG,EAAI,EAAE,EAAEC,QAAQ,CAAC,CAAC,CACzC,KAAM,CAAAC,cAAc,CAAGF,GAAG,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAIH,GAAG,CAACG,QAAQ,CAAC,eAAe,CAAC,EAAIH,GAAG,CAACG,QAAQ,CAAC,gBAAgB,CAAC,CACrH,GAAI,CAACD,cAAc,CAAE,CACnB,KAAM,CAAAvB,KAAK,CAAGM,oBAAoB,CAAC,CAAC,CACpC,GAAIN,KAAK,CAAE,CACToB,MAAM,CAACK,OAAO,CAAGL,MAAM,CAACK,OAAO,EAAI,CAAC,CAAC,CACrCL,MAAM,CAACK,OAAO,CAACC,aAAa,WAAArC,MAAA,CAAaW,KAAK,CAAE,CAClD,CACF,CACA,MAAO,CAAAoB,MAAM,CACf,CAAC,CAAC,CAEF;AACAN,GAAG,CAACG,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BS,IAAI,EAAKA,IAAI,CACd,KAAO,CAAAC,KAAK,EAAK,KAAAC,eAAA,CACf,KAAM,CAAAC,eAAe,CAAGF,KAAK,CAACT,MAAM,EAAI,CAAC,CAAC,CAC1C,KAAM,CAAAY,MAAM,EAAAF,eAAA,CAAGD,KAAK,CAACF,QAAQ,UAAAG,eAAA,iBAAdA,eAAA,CAAgBE,MAAM,CACrC,KAAM,CAAAX,GAAG,CAAG,CAACU,eAAe,CAACV,GAAG,EAAI,EAAE,EAAEC,QAAQ,CAAC,CAAC,CAClD,KAAM,CAAAC,cAAc,CAAGF,GAAG,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAIH,GAAG,CAACG,QAAQ,CAAC,eAAe,CAAC,EAAIH,GAAG,CAACG,QAAQ,CAAC,gBAAgB,CAAC,CAErH,GAAIQ,MAAM,GAAK,GAAG,EAAI,CAACD,eAAe,CAACE,MAAM,EAAI,CAACV,cAAc,CAAE,CAChEQ,eAAe,CAACE,MAAM,CAAG,IAAI,CAC7B,KAAM,CAAAC,MAAM,CAAGzB,qBAAqB,CAAC,CAAC,CACtC,GAAIyB,MAAM,CAAE,CACV,GAAI,CACF,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAjD,KAAK,CAACkD,IAAI,IAAA/C,MAAA,CAAII,QAAQ,kBAAiB,CAAE4C,OAAO,CAAEH,MAAO,CAAC,CAAC,CAClFnC,cAAc,CAACoC,IAAI,CAACG,MAAM,CAAC,CAC3B,GAAIH,IAAI,CAACE,OAAO,CAAEjC,eAAe,CAAC+B,IAAI,CAACE,OAAO,CAAC,CAC/CN,eAAe,CAACN,OAAO,CAAGM,eAAe,CAACN,OAAO,EAAI,CAAC,CAAC,CACvDM,eAAe,CAACN,OAAO,CAACC,aAAa,WAAArC,MAAA,CAAa8C,IAAI,CAACG,MAAM,CAAE,CAC/D,MAAO,CAAAxB,GAAG,CAACI,OAAO,CAACa,eAAe,CAAC,CACrC,CAAE,MAAOQ,CAAC,CAAE,CACV5B,WAAW,CAAC,CAAC,CACf,CACF,CAAC,IAAM,CACLA,WAAW,CAAC,CAAC,CACf,CACF,CACA,MAAO,CAAA6B,OAAO,CAACC,MAAM,CAACZ,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAa,KAAKA,CAACC,QAAQ,CAAEC,QAAQ,CAAE,CAC9C,KAAM,CAAET,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACsB,IAAI,CAAC,aAAa,CAAE,CAAEO,QAAQ,CAAEC,QAAS,CAAC,CAAC,CACtE;AACA7C,cAAc,CAACoC,IAAI,CAACG,MAAM,CAAC,CAC3BlC,eAAe,CAAC+B,IAAI,CAACE,OAAO,EAAI,EAAE,CAAC,CACnC;AACA,MAAO,CAAAF,IAAI,CACb,CAEA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAU,QAAQA,CAACF,QAAQ,CAAEG,KAAK,CAAEF,QAAQ,CAAE,CACxD,KAAM,CAAET,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACsB,IAAI,CAAC,gBAAgB,CAAE,CAAEO,QAAQ,CAAEG,KAAK,CAAEF,QAAS,CAAC,CAAC,CAChF,MAAO,CAAAT,IAAI,CACb,CAEA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAY,KAAKA,CAACC,QAAQ,CAA8B,IAA5B,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAAG,eAAe,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC9D,KAAM,CAAEjB,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACsB,IAAI,CAAC,QAAQ,CAAE,CAAEY,QAAQ,CAAEC,KAAK,CAAEI,eAAgB,CAAC,CAAC,CAC/E,MAAO,CAAAlB,IAAI,CACb,CAEA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAmB,MAAMA,CAACC,OAAO,CAAE,CACpC,KAAM,CAAEpB,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACsB,IAAI,CAAC,SAAS,CAAEmB,OAAO,CAAC,CACnD,MAAO,CAAApB,IAAI,CACb,CAEA;AACA,MAAO,eAAe,CAAAqB,SAASA,CAAA,CAAG,CAChC,KAAM,CAAErB,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACsB,IAAI,CAAC,aAAa,CAAE,CAAC,CAAC,CAAC,CAClD,MAAO,CAAAD,IAAI,CACb,CAEA;AACA,MAAO,eAAe,CAAAsB,SAASA,CAACC,IAAI,CAAa,IAAX,CAAAC,IAAI,CAAAT,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC7C,KAAM,CAAAU,IAAI,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,CAAEJ,IAAI,CAAC,CACzB,GAAIC,IAAI,CAACI,UAAU,CAAEH,IAAI,CAACE,MAAM,CAAC,YAAY,CAAEE,MAAM,CAACL,IAAI,CAACI,UAAU,CAAC,CAAC,CACvE,GAAIJ,IAAI,CAACM,aAAa,CAAEL,IAAI,CAACE,MAAM,CAAC,eAAe,CAAEE,MAAM,CAACL,IAAI,CAACM,aAAa,CAAC,CAAC,CAChF,KAAM,CAAE9B,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACsB,IAAI,CAAC,gBAAgB,CAAEwB,IAAI,CAAE,CACtDnC,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACnD,CAAC,CAAC,CACF,MAAO,CAAAU,IAAI,CACb,CAEA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAA+B,MAAMA,CAAA,CAAG,CAC7B,KAAM,CAAE/B,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACqD,GAAG,CAAC,SAAS,CAAC,CACzC,MAAO,CAAAhC,IAAI,CACb,CAEA;AACA,MAAO,eAAe,CAAAiC,gBAAgBA,CAAA,CAAG,CACvC,KAAM,CAAEjC,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACqD,GAAG,CAAC,gBAAgB,CAAC,CAChD,MAAO,CAAAhC,IAAI,CACb,CAEA;AACA,MAAO,eAAe,CAAAkC,WAAWA,CAACC,MAAM,CAAE,CACxC,KAAM,CAAEnC,IAAK,CAAC,CAAG,KAAM,CAAArB,GAAG,CAACqD,GAAG,mBAAA9E,MAAA,CAAmBiF,MAAM,aAAW,CAAC,CACnE,MAAO,CAAAnC,IAAI,CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}