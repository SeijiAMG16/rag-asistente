{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaya\\\\Downloads\\\\rag-asistente-main\\\\rag-asistente-main\\\\frontend-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Chat from \"./Chat\";\n\n/**\r\n * Componente principal de la aplicación\r\n * Maneja la navegación entre las pantallas de login, registro y chat\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados para controlar qué pantalla mostrar\n  const [currentView, setCurrentView] = useState(\"login\"); // \"login\" | \"register\" | \"chat\"\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  /**\r\n   * Función que se ejecuta cuando el usuario se loguea exitosamente\r\n   * Cambia el estado para mostrar la pantalla de chat\r\n   */\n  function handleLogin() {\n    setLoggedIn(true);\n    setCurrentView(\"chat\");\n  }\n\n  /**\r\n   * Función para navegar a la pantalla de registro\r\n   */\n  function showRegister() {\n    setCurrentView(\"register\");\n  }\n\n  /**\r\n   * Función para volver a la pantalla de login\r\n   */\n  function showLogin() {\n    setCurrentView(\"login\");\n  }\n\n  /**\r\n   * Función que se ejecuta cuando el usuario se registra exitosamente\r\n   * Por ahora redirige al login, pero podría auto-loguearlo\r\n   */\n  function handleRegister() {\n    // Después del registro exitoso, volver al login\n    setCurrentView(\"login\");\n  }\n\n  /**\r\n   * Función para cerrar sesión (logout)\r\n   * Vuelve al estado inicial y muestra la pantalla de login\r\n   */\n  function handleLogout() {\n    setLoggedIn(false);\n    setCurrentView(\"login\");\n    try {\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh');\n    } catch {}\n  }\n\n  // Renderizar la pantalla correspondiente según el estado actual\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [currentView === \"login\" && /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      onShowRegister: showRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), currentView === \"register\" && /*#__PURE__*/_jsxDEV(Register, {\n      onRegister: handleRegister,\n      onBackToLogin: showLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), currentView === \"chat\" && loggedIn && /*#__PURE__*/_jsxDEV(Chat, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8wxxeqa2RUVuIWGJdKuqgG9KUEI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Register","Chat","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","loggedIn","setLoggedIn","handleLogin","showRegister","showLogin","handleRegister","handleLogout","localStorage","removeItem","className","children","onLogin","onShowRegister","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","onBackToLogin","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/amaya/Downloads/rag-asistente-main/rag-asistente-main/frontend-react/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport Chat from \"./Chat\";\r\n\r\n/**\r\n * Componente principal de la aplicación\r\n * Maneja la navegación entre las pantallas de login, registro y chat\r\n */\r\nfunction App() {\r\n  // Estados para controlar qué pantalla mostrar\r\n  const [currentView, setCurrentView] = useState(\"login\"); // \"login\" | \"register\" | \"chat\"\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  /**\r\n   * Función que se ejecuta cuando el usuario se loguea exitosamente\r\n   * Cambia el estado para mostrar la pantalla de chat\r\n   */\r\n  function handleLogin() {\r\n    setLoggedIn(true);\r\n    setCurrentView(\"chat\");\r\n  }\r\n\r\n  /**\r\n   * Función para navegar a la pantalla de registro\r\n   */\r\n  function showRegister() {\r\n    setCurrentView(\"register\");\r\n  }\r\n\r\n  /**\r\n   * Función para volver a la pantalla de login\r\n   */\r\n  function showLogin() {\r\n    setCurrentView(\"login\");\r\n  }\r\n\r\n  /**\r\n   * Función que se ejecuta cuando el usuario se registra exitosamente\r\n   * Por ahora redirige al login, pero podría auto-loguearlo\r\n   */\r\n  function handleRegister() {\r\n    // Después del registro exitoso, volver al login\r\n    setCurrentView(\"login\");\r\n  }\r\n\r\n  /**\r\n   * Función para cerrar sesión (logout)\r\n   * Vuelve al estado inicial y muestra la pantalla de login\r\n   */\r\n  function handleLogout() {\r\n    setLoggedIn(false);\r\n    setCurrentView(\"login\");\r\n    try {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('refresh');\r\n    } catch {}\r\n  }\r\n\r\n  // Renderizar la pantalla correspondiente según el estado actual\r\n  return (\r\n    <div className=\"app-container\">\r\n      {currentView === \"login\" && (\r\n        <Login \r\n          onLogin={handleLogin} \r\n          onShowRegister={showRegister}\r\n        />\r\n      )}\r\n      \r\n      {currentView === \"register\" && (\r\n        <Register \r\n          onRegister={handleRegister}\r\n          onBackToLogin={showLogin}\r\n        />\r\n      )}\r\n      \r\n      {currentView === \"chat\" && loggedIn && (\r\n        <Chat onLogout={handleLogout} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;;AAEzB;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACzD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE/C;AACF;AACA;AACA;EACE,SAASY,WAAWA,CAAA,EAAG;IACrBD,WAAW,CAAC,IAAI,CAAC;IACjBF,cAAc,CAAC,MAAM,CAAC;EACxB;;EAEA;AACF;AACA;EACE,SAASI,YAAYA,CAAA,EAAG;IACtBJ,cAAc,CAAC,UAAU,CAAC;EAC5B;;EAEA;AACF;AACA;EACE,SAASK,SAASA,CAAA,EAAG;IACnBL,cAAc,CAAC,OAAO,CAAC;EACzB;;EAEA;AACF;AACA;AACA;EACE,SAASM,cAAcA,CAAA,EAAG;IACxB;IACAN,cAAc,CAAC,OAAO,CAAC;EACzB;;EAEA;AACF;AACA;AACA;EACE,SAASO,YAAYA,CAAA,EAAG;IACtBL,WAAW,CAAC,KAAK,CAAC;IAClBF,cAAc,CAAC,OAAO,CAAC;IACvB,IAAI;MACFQ,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAChCD,YAAY,CAACC,UAAU,CAAC,SAAS,CAAC;IACpC,CAAC,CAAC,MAAM,CAAC;EACX;;EAEA;EACA,oBACEb,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,GAC3BZ,WAAW,KAAK,OAAO,iBACtBH,OAAA,CAACJ,KAAK;MACJoB,OAAO,EAAET,WAAY;MACrBU,cAAc,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF,EAEAlB,WAAW,KAAK,UAAU,iBACzBH,OAAA,CAACH,QAAQ;MACPyB,UAAU,EAAEZ,cAAe;MAC3Ba,aAAa,EAAEd;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACF,EAEAlB,WAAW,KAAK,MAAM,IAAIE,QAAQ,iBACjCL,OAAA,CAACF,IAAI;MAAC0B,QAAQ,EAAEb;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAxEQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA0EZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}