{"ast":null,"code":"import React,{useState}from\"react\";import Login from\"./Login\";import Register from\"./Register\";import Chat from\"./Chat\";/**\r\n * Componente principal de la aplicación\r\n * Maneja la navegación entre las pantallas de login, registro y chat\r\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Estados para controlar qué pantalla mostrar\nconst[currentView,setCurrentView]=useState(\"login\");// \"login\" | \"register\" | \"chat\"\nconst[loggedIn,setLoggedIn]=useState(false);/**\r\n   * Función que se ejecuta cuando el usuario se loguea exitosamente\r\n   * Cambia el estado para mostrar la pantalla de chat\r\n   */function handleLogin(){setLoggedIn(true);setCurrentView(\"chat\");}/**\r\n   * Función para navegar a la pantalla de registro\r\n   */function showRegister(){setCurrentView(\"register\");}/**\r\n   * Función para volver a la pantalla de login\r\n   */function showLogin(){setCurrentView(\"login\");}/**\r\n   * Función que se ejecuta cuando el usuario se registra exitosamente\r\n   * Por ahora redirige al login, pero podría auto-loguearlo\r\n   */function handleRegister(){// Después del registro exitoso, volver al login\nsetCurrentView(\"login\");}/**\r\n   * Función para cerrar sesión (logout)\r\n   * Vuelve al estado inicial y muestra la pantalla de login\r\n   */function handleLogout(){setLoggedIn(false);setCurrentView(\"login\");try{localStorage.removeItem('token');localStorage.removeItem('refresh');}catch(_unused){}}// Renderizar la pantalla correspondiente según el estado actual\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[currentView===\"login\"&&/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,onShowRegister:showRegister}),currentView===\"register\"&&/*#__PURE__*/_jsx(Register,{onRegister:handleRegister,onBackToLogin:showLogin}),currentView===\"chat\"&&loggedIn&&/*#__PURE__*/_jsx(Chat,{onLogout:handleLogout})]});}export default App;","map":{"version":3,"names":["React","useState","Login","Register","Chat","jsx","_jsx","jsxs","_jsxs","App","currentView","setCurrentView","loggedIn","setLoggedIn","handleLogin","showRegister","showLogin","handleRegister","handleLogout","localStorage","removeItem","_unused","className","children","onLogin","onShowRegister","onRegister","onBackToLogin","onLogout"],"sources":["C:/Users/amaya/Downloads/rag-asistente-main/rag-asistente-main/frontend-react/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport Chat from \"./Chat\";\r\n\r\n/**\r\n * Componente principal de la aplicación\r\n * Maneja la navegación entre las pantallas de login, registro y chat\r\n */\r\nfunction App() {\r\n  // Estados para controlar qué pantalla mostrar\r\n  const [currentView, setCurrentView] = useState(\"login\"); // \"login\" | \"register\" | \"chat\"\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  /**\r\n   * Función que se ejecuta cuando el usuario se loguea exitosamente\r\n   * Cambia el estado para mostrar la pantalla de chat\r\n   */\r\n  function handleLogin() {\r\n    setLoggedIn(true);\r\n    setCurrentView(\"chat\");\r\n  }\r\n\r\n  /**\r\n   * Función para navegar a la pantalla de registro\r\n   */\r\n  function showRegister() {\r\n    setCurrentView(\"register\");\r\n  }\r\n\r\n  /**\r\n   * Función para volver a la pantalla de login\r\n   */\r\n  function showLogin() {\r\n    setCurrentView(\"login\");\r\n  }\r\n\r\n  /**\r\n   * Función que se ejecuta cuando el usuario se registra exitosamente\r\n   * Por ahora redirige al login, pero podría auto-loguearlo\r\n   */\r\n  function handleRegister() {\r\n    // Después del registro exitoso, volver al login\r\n    setCurrentView(\"login\");\r\n  }\r\n\r\n  /**\r\n   * Función para cerrar sesión (logout)\r\n   * Vuelve al estado inicial y muestra la pantalla de login\r\n   */\r\n  function handleLogout() {\r\n    setLoggedIn(false);\r\n    setCurrentView(\"login\");\r\n    try {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('refresh');\r\n    } catch {}\r\n  }\r\n\r\n  // Renderizar la pantalla correspondiente según el estado actual\r\n  return (\r\n    <div className=\"app-container\">\r\n      {currentView === \"login\" && (\r\n        <Login \r\n          onLogin={handleLogin} \r\n          onShowRegister={showRegister}\r\n        />\r\n      )}\r\n      \r\n      {currentView === \"register\" && (\r\n        <Register \r\n          onRegister={handleRegister}\r\n          onBackToLogin={showLogin}\r\n        />\r\n      )}\r\n      \r\n      {currentView === \"chat\" && loggedIn && (\r\n        <Chat onLogout={handleLogout} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAEzB;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAIA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,OAAO,CAAC,CAAE;AACzD,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAE/C;AACF;AACA;AACA,KACE,QAAS,CAAAa,WAAWA,CAAA,CAAG,CACrBD,WAAW,CAAC,IAAI,CAAC,CACjBF,cAAc,CAAC,MAAM,CAAC,CACxB,CAEA;AACF;AACA,KACE,QAAS,CAAAI,YAAYA,CAAA,CAAG,CACtBJ,cAAc,CAAC,UAAU,CAAC,CAC5B,CAEA;AACF;AACA,KACE,QAAS,CAAAK,SAASA,CAAA,CAAG,CACnBL,cAAc,CAAC,OAAO,CAAC,CACzB,CAEA;AACF;AACA;AACA,KACE,QAAS,CAAAM,cAAcA,CAAA,CAAG,CACxB;AACAN,cAAc,CAAC,OAAO,CAAC,CACzB,CAEA;AACF;AACA;AACA,KACE,QAAS,CAAAO,YAAYA,CAAA,CAAG,CACtBL,WAAW,CAAC,KAAK,CAAC,CAClBF,cAAc,CAAC,OAAO,CAAC,CACvB,GAAI,CACFQ,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAChCD,YAAY,CAACC,UAAU,CAAC,SAAS,CAAC,CACpC,CAAE,MAAAC,OAAA,CAAM,CAAC,CACX,CAEA;AACA,mBACEb,KAAA,QAAKc,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC3Bb,WAAW,GAAK,OAAO,eACtBJ,IAAA,CAACJ,KAAK,EACJsB,OAAO,CAAEV,WAAY,CACrBW,cAAc,CAAEV,YAAa,CAC9B,CACF,CAEAL,WAAW,GAAK,UAAU,eACzBJ,IAAA,CAACH,QAAQ,EACPuB,UAAU,CAAET,cAAe,CAC3BU,aAAa,CAAEX,SAAU,CAC1B,CACF,CAEAN,WAAW,GAAK,MAAM,EAAIE,QAAQ,eACjCN,IAAA,CAACF,IAAI,EAACwB,QAAQ,CAAEV,YAAa,CAAE,CAChC,EACE,CAAC,CAEV,CAEA,cAAe,CAAAT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}